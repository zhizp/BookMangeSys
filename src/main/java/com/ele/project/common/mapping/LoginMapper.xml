<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ele.project.common.dao.LoginDao">
	<select id="selectUser" resultType="com.ele.project.sysmanager.user.pojo.UserDTO" parameterType="com.ele.project.sysmanager.user.pojo.UserDTO">
		select * from t_user where  state=0 and  username = #{username,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
	</select>
	
	<select id="getUserDTOByName" resultType="Map" parameterType="Map">
		select * from t_user where  state=0 and  username = #{username,jdbcType=VARCHAR}
	</select>
	<insert id="insertUser" parameterType="Map">
		insert into t_user (
					id
					,username
					,name
					,password
					,cardid
					,sex
					,manager
					,allowborrow
					,state
					,registerdate
					,mobile
			)values(
				#{id}
				,#{username}
				,#{name}
				,#{password}
				,#{cardid}
				,#{sex}
				,'0'
				,#{allowborrow}
				,0
				,#{registerdate}
				,#{mobile}
				)
	</insert>
	<select id="queryUserList" parameterType="Map" resultType="Map">
		select * from t_user where  state=0 and allowborrow=0 and (  
		    username=#{username,jdbcType=VARCHAR}
			or name=#{name,jdbcType=VARCHAR}
			or cardid=#{cardid,jdbcType=VARCHAR}
		)
		order by username 
		LIMIT #{page},#{pagesize}
	</select>
	<select id="queryUserCount" parameterType="Map" resultType="int">
		select count(1) from t_user where  state=0 and allowborrow=0 and (  
		    username=#{username,jdbcType=VARCHAR}
			or name=#{name,jdbcType=VARCHAR}
			or cardid=#{cardid,jdbcType=VARCHAR}
		) 
	</select>
	<delete id="deleteUserById" parameterType="String">
		delete from t_user where id=#{userid,jdbcType=VARCHAR}
	</delete>
	<update id="updateUserState" parameterType="Map">
		update t_user set state=1 where id=#{id}
	</update>
	<select id="getOldPwdByid" parameterType="Map" resultType="Map">
		select * from t_user where id=#{id}
	</select>
	<select id="checkoldPasswordByid" parameterType="Map" resultType="Map">
		select * from t_user where id=#{userid} and password=#{oldpwd}
	</select>
	<update id="updatePasswordByid" parameterType="Map">
		update t_user set password=#{password} where id=#{userid} 
	</update>
	<select id="getUserInfoByUserid" parameterType="Map" resultType="Map">
		select u.id,u.name,u.username,u.sex,u.password,u.mobile,u.cardid,u.allowborrow,u.manager,date_format(u.registerdate,'%Y-%m-%d') as registerdate,
		u.cardid,u.mobile,u.totalborrow,COUNT(v.id) AS violats,v.finepay,v.finepaid
		from t_user u
		left join t_violate v on u.id=v.userid
		where u.id=#{userid}
	</select>
	<update id="updateUserByid" parameterType="Map">
		update t_user set name=#{name},username=#{username},sex=#{sex},password=#{password},cardid=#{cardid},
		registerdate= #{registerdate},mobile=#{mobile},allowborrow=#{allowborrow}
		where id=#{userid}
	</update>
</mapper>